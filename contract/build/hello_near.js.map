{"version":3,"file":"hello_near.js","sources":["../node_modules/near-sdk-js/lib/types/vm_types.js","../node_modules/near-sdk-js/lib/utils.js","../node_modules/@scure/base/lib/esm/index.js","../node_modules/near-sdk-js/lib/types/public_key.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/collections/vector.js","../node_modules/near-sdk-js/lib/collections/unordered-map.js","../node_modules/near-sdk-js/lib/collections/unordered-set.js","../src/model.ts","../src/contract.ts"],"sourcesContent":["export var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport var PromiseError;\n(function (PromiseError) {\n    PromiseError[PromiseError[\"Failed\"] = 0] = \"Failed\";\n    PromiseError[PromiseError[\"NotReady\"] = 1] = \"NotReady\";\n})(PromiseError || (PromiseError = {}));\n","export function u8ArrayToBytes(array) {\n    let ret = \"\";\n    for (let e of array) {\n        ret += String.fromCharCode(e);\n    }\n    return ret;\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    let ret = new Uint8Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        ret[i] = bytes.charCodeAt(i);\n    }\n    return ret;\n}\nexport function bytes(strOrU8Array) {\n    if (typeof strOrU8Array == \"string\") {\n        return checkStringIsBytes(strOrU8Array);\n    }\n    else if (strOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(strOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) > 255) {\n            throw new Error(`string ${str} at index ${i}: ${str[i]} is not a valid byte`);\n        }\n    }\n    return str;\n}\nexport function assert(b, str) {\n    if (b) {\n        return;\n    }\n    else {\n        throw Error(\"assertion failed: \" + str);\n    }\n}\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","import { bytes } from \"../utils\";\nimport { base58 } from '@scure/base';\nexport var CurveType;\n(function (CurveType) {\n    CurveType[CurveType[\"ED25519\"] = 0] = \"ED25519\";\n    CurveType[CurveType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(CurveType || (CurveType = {}));\nfunction data_len(c) {\n    switch (c) {\n        case CurveType.ED25519:\n            return 32;\n        case CurveType.SECP256K1:\n            return 64;\n        default:\n            throw new UnknownCurve();\n    }\n}\nfunction split_key_type_data(value) {\n    let idx = value.indexOf(\":\");\n    if (idx >= 0) {\n        return [curveTypeFromStr(value.substring(0, idx)), value.substring(idx + 1)];\n    }\n    else {\n        return [CurveType.ED25519, value];\n    }\n}\nexport function curveTypeFromStr(value) {\n    switch (value) {\n        case \"ed25519\":\n            return CurveType.ED25519;\n        case \"secp256k1\":\n            return CurveType.SECP256K1;\n        default:\n            throw new UnknownCurve();\n    }\n}\nexport class ParsePublicKeyError extends Error {\n}\nexport class InvalidLengthError extends ParsePublicKeyError {\n    constructor(length) {\n        super(`Invalid length: ${length}`);\n        this.length = length;\n    }\n}\nexport class Base58Error extends ParsePublicKeyError {\n    constructor(error) {\n        super(`Base58 error: ${error}`);\n        this.error = error;\n    }\n}\nexport class UnknownCurve extends ParsePublicKeyError {\n    constructor() {\n        super(\"Unknown curve\");\n    }\n}\nexport class PublicKey {\n    constructor(data) {\n        this.data = data;\n        let curve_type = data.charCodeAt(0);\n        let curve_len = data_len(curve_type);\n        if (data.length != curve_len + 1) {\n            throw new InvalidLengthError(data.length);\n        }\n        this.data = data;\n    }\n    curveType() {\n        return this.data.charCodeAt(0);\n    }\n    static fromString(s) {\n        let [curve, key_data] = split_key_type_data(s);\n        let data;\n        try {\n            data = bytes(base58.decode(key_data));\n        }\n        catch (err) {\n            throw new Base58Error(err.message);\n        }\n        return new PublicKey(String.fromCharCode(curve) + data);\n    }\n}\n","import { PromiseResult } from \"./types\";\nconst U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\n// NOTE: \"env.panic(msg)\" is not exported, use \"throw Error(msg)\" instead\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseBatchActionFunctionCallWeight(promiseIndex, methodName, args, amount, gas, weight) {\n    env.promise_batch_action_function_call_weight(promiseIndex, methodName, args, amount, gas, weight);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else if (status == PromiseResult.Failed ||\n        status == PromiseResult.NotReady) {\n        return status;\n    }\n    else {\n        throw Error(`Unexpected return code: ${status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport function initialize(target, key, descriptor) {\n}\nexport function call(target, key, descriptor) {\n}\nexport function view(target, key, descriptor) {\n}\nexport function NearBindgen({ requireInit = false }) {\n    return (target) => {\n        return class extends target {\n            static _create() {\n                return new target();\n            }\n            static _getState() {\n                const rawState = near.storageRead(\"STATE\");\n                return rawState ? this._deserialize(rawState) : null;\n            }\n            static _saveToStorage(obj) {\n                near.storageWrite(\"STATE\", this._serialize(obj));\n            }\n            static _getArgs() {\n                return JSON.parse(near.input() || \"{}\");\n            }\n            static _serialize(value) {\n                return JSON.stringify(value);\n            }\n            static _deserialize(value) {\n                return JSON.parse(value);\n            }\n            static _reconstruct(classObject, plainObject) {\n                for (const item in classObject) {\n                    if (classObject[item].constructor?.deserialize !== undefined) {\n                        classObject[item] = classObject[item].constructor.deserialize(plainObject[item]);\n                    }\n                    else {\n                        classObject[item] = plainObject[item];\n                    }\n                }\n                return classObject;\n            }\n            static _requireInit() {\n                return requireInit;\n            }\n        };\n    };\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes } from \"../utils\";\nconst ERR_INDEX_OUT_OF_BOUNDS = \"Index out of bounds\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction indexToKey(prefix, index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    let key = u8ArrayToBytes(array);\n    return prefix + key;\n}\n/// An iterable implementation of vector that stores its content on the trie.\n/// Uses the following map: index -> element\nexport class Vector {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n    }\n    isEmpty() {\n        return this.length == 0;\n    }\n    get(index) {\n        if (index >= this.length) {\n            return null;\n        }\n        let storageKey = indexToKey(this.prefix, index);\n        return JSON.parse(near.storageRead(storageKey));\n    }\n    /// Removes an element from the vector and returns it in serialized form.\n    /// The removed element is replaced by the last element of the vector.\n    /// Does not preserve ordering, but is `O(1)`.\n    swapRemove(index) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else if (index + 1 == this.length) {\n            return this.pop();\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            let last = this.pop();\n            if (near.storageWrite(key, JSON.stringify(last))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    push(element) {\n        let key = indexToKey(this.prefix, this.length);\n        this.length += 1;\n        near.storageWrite(key, JSON.stringify(element));\n    }\n    pop() {\n        if (this.isEmpty()) {\n            return null;\n        }\n        else {\n            let lastIndex = this.length - 1;\n            let lastKey = indexToKey(this.prefix, lastIndex);\n            this.length -= 1;\n            if (near.storageRemove(lastKey)) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    replace(index, element) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            if (near.storageWrite(key, JSON.stringify(element))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.push(element);\n        }\n    }\n    [Symbol.iterator]() {\n        return new VectorIterator(this);\n    }\n    clear() {\n        for (let i = 0; i < this.length; i++) {\n            let key = indexToKey(this.prefix, i);\n            near.storageRemove(key);\n        }\n        this.length = 0;\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let vector = new Vector(data.prefix);\n        vector.length = data.length;\n        return vector;\n    }\n}\nexport class VectorIterator {\n    constructor(vector) {\n        this.current = 0;\n        this.vector = vector;\n    }\n    next() {\n        if (this.current < this.vector.length) {\n            let value = this.vector.get(this.current);\n            this.current += 1;\n            return { value, done: false };\n        }\n        return { value: null, done: true };\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes, bytesToU8Array } from \"../utils\";\nimport { Vector, VectorIterator } from \"./vector\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction serializeIndex(index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    return u8ArrayToBytes(array);\n}\nfunction deserializeIndex(rawIndex) {\n    let array = bytesToU8Array(rawIndex);\n    let data = new Uint32Array(array.buffer);\n    return data[0];\n}\nfunction getIndexRaw(keyIndexPrefix, key) {\n    let indexLookup = keyIndexPrefix + JSON.stringify(key);\n    let indexRaw = near.storageRead(indexLookup);\n    return indexRaw;\n}\nexport class UnorderedMap {\n    constructor(prefix) {\n        this.prefix = prefix;\n        this.keyIndexPrefix = prefix + \"i\";\n        let indexKey = prefix + \"k\";\n        let indexValue = prefix + \"v\";\n        this.keys = new Vector(indexKey);\n        this.values = new Vector(indexValue);\n    }\n    get length() {\n        let keysLen = this.keys.length;\n        let valuesLen = this.values.length;\n        if (keysLen != valuesLen) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        return keysLen;\n    }\n    // noop, called by deserialize\n    set length(_l) { }\n    isEmpty() {\n        let keysIsEmpty = this.keys.isEmpty();\n        let valuesIsEmpty = this.values.isEmpty();\n        if (keysIsEmpty != valuesIsEmpty) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        return keysIsEmpty;\n    }\n    get(key) {\n        let indexRaw = getIndexRaw(this.keyIndexPrefix, key);\n        if (indexRaw) {\n            let index = deserializeIndex(indexRaw);\n            let value = this.values.get(index);\n            if (value) {\n                return value;\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n        return null;\n    }\n    set(key, value) {\n        let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            let index = deserializeIndex(indexRaw);\n            return this.values.replace(index, value);\n        }\n        else {\n            let nextIndex = this.length;\n            let nextIndexRaw = serializeIndex(nextIndex);\n            near.storageWrite(indexLookup, nextIndexRaw);\n            this.keys.push(key);\n            this.values.push(value);\n            return null;\n        }\n    }\n    remove(key) {\n        let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            if (this.length == 1) {\n                // If there is only one element then swap remove simply removes it without\n                // swapping with the last element.\n                near.storageRemove(indexLookup);\n            }\n            else {\n                // If there is more than one element then swap remove swaps it with the last\n                // element.\n                let lastKey = this.keys.get(this.length - 1);\n                if (!lastKey) {\n                    throw new Error(ERR_INCONSISTENT_STATE);\n                }\n                near.storageRemove(indexLookup);\n                // If the removed element was the last element from keys, then we don't need to\n                // reinsert the lookup back.\n                if (lastKey != key) {\n                    let lastLookupKey = this.keyIndexPrefix + JSON.stringify(lastKey);\n                    near.storageWrite(lastLookupKey, indexRaw);\n                }\n            }\n            let index = deserializeIndex(indexRaw);\n            this.keys.swapRemove(index);\n            return this.values.swapRemove(index);\n        }\n        return null;\n    }\n    clear() {\n        for (let key of this.keys) {\n            let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n            near.storageRemove(indexLookup);\n        }\n        this.keys.clear();\n        this.values.clear();\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    [Symbol.iterator]() {\n        return new UnorderedMapIterator(this);\n    }\n    extend(kvs) {\n        for (let [k, v] of kvs) {\n            this.set(k, v);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let map = new UnorderedMap(data.prefix);\n        // reconstruct UnorderedMap\n        map.length = data.length;\n        // reconstruct keys Vector\n        map.keys = new Vector(data.prefix + \"k\");\n        map.keys.length = data.keys.length;\n        // reconstruct values Vector\n        map.values = new Vector(data.prefix + \"v\");\n        map.values.length = data.values.length;\n        return map;\n    }\n}\nclass UnorderedMapIterator {\n    constructor(unorderedMap) {\n        this.keys = new VectorIterator(unorderedMap.keys);\n        this.values = new VectorIterator(unorderedMap.values);\n    }\n    next() {\n        let key = this.keys.next();\n        let value = this.values.next();\n        if (key.done != value.done) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        return { value: [key.value, value.value], done: key.done };\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes, bytesToU8Array } from \"../utils\";\nimport { Vector } from \"./vector\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction serializeIndex(index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    return u8ArrayToBytes(array);\n}\nfunction deserializeIndex(rawIndex) {\n    let array = bytesToU8Array(rawIndex);\n    let data = new Uint32Array(array.buffer);\n    return data[0];\n}\nexport class UnorderedSet {\n    constructor(prefix) {\n        this.prefix = prefix;\n        this.elementIndexPrefix = prefix + \"i\";\n        let elementsPrefix = prefix + \"e\";\n        this.elements = new Vector(elementsPrefix);\n    }\n    get length() {\n        return this.elements.length;\n    }\n    // noop, called by deserialize\n    set length(_l) { }\n    isEmpty() {\n        return this.elements.isEmpty();\n    }\n    contains(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        return near.storageHasKey(indexLookup);\n    }\n    set(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        if (near.storageRead(indexLookup)) {\n            return false;\n        }\n        else {\n            let nextIndex = this.length;\n            let nextIndexRaw = serializeIndex(nextIndex);\n            near.storageWrite(indexLookup, nextIndexRaw);\n            this.elements.push(element);\n            return true;\n        }\n    }\n    remove(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            if (this.length == 1) {\n                // If there is only one element then swap remove simply removes it without\n                // swapping with the last element.\n                near.storageRemove(indexLookup);\n            }\n            else {\n                // If there is more than one element then swap remove swaps it with the last\n                // element.\n                let lastElement = this.elements.get(this.length - 1);\n                if (!lastElement) {\n                    throw new Error(ERR_INCONSISTENT_STATE);\n                }\n                near.storageRemove(indexLookup);\n                // If the removed element was the last element from keys, then we don't need to\n                // reinsert the lookup back.\n                if (lastElement != element) {\n                    let lastLookupElement = this.elementIndexPrefix + JSON.stringify(lastElement);\n                    near.storageWrite(lastLookupElement, indexRaw);\n                }\n            }\n            let index = deserializeIndex(indexRaw);\n            this.elements.swapRemove(index);\n            return true;\n        }\n        return false;\n    }\n    clear() {\n        for (let element of this.elements) {\n            let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n            near.storageRemove(indexLookup);\n        }\n        this.elements.clear();\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    [Symbol.iterator]() {\n        return this.elements[Symbol.iterator]();\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.set(element);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let set = new UnorderedSet(data.prefix);\n        // reconstruct UnorderedSet\n        set.length = data.length;\n        // reconstruct Vector\n        let elementsPrefix = data.prefix + \"e\";\n        set.elements = new Vector(elementsPrefix);\n        set.elements.length = data.elements.length;\n        return set;\n    }\n}\n","import {  near } from \"near-sdk-js\";\n\nexport const STORAGE_COST: bigint = BigInt(\"1000000000000000000000\");\n\nexport class UserAccount {\n  id: string;\n  userEmail: string;\n  audience: string[];\n  accountCreator: string;\n\n  constructor(payload: UserAccount) {\n    this.id = payload.id;\n    this.userEmail = payload.userEmail;\n    this.accountCreator = near.signerAccountId();\n\n    // return userAccount;\n  };\n\n//   constructor({ account_id, total_amount }: { account_id: string; total_amount: string }) {\n//     this.account_id = account_id;\n//     this.total_amount = total_amount;\n//   }\n}\n","import { NearBindgen, near, call, view, LookupMap, UnorderedMap, Vector, UnorderedSet, assert } from \"near-sdk-js\";\nimport { UserAccount, STORAGE_COST } from \"./model\";\n\nexport function restoreOwners(collection) {\n  if (collection == null) {\n    return null;\n  }\n  return UnorderedSet.deserialize(collection as UnorderedSet);\n}\n\n@NearBindgen({})\nclass NewsletterContract {\n  greeting: string = \"Hello\";\n  userAccounts: UnorderedMap = new UnorderedMap(\"user-accounts\");\n\n  @call\n  register_user({ userAccount }: { userAccount: UserAccount }) {\n    let user = this.userAccounts.get(userAccount.id);\n\n    if (user !== null) {\n      throw new Error(`User with ${userAccount.id} ID already exists`);\n    }\n    this.userAccounts.set(userAccount.id, new UserAccount(userAccount));\n\n    // //   throw new Error(`A user with ${userAccount.id} already exists`);\n    // // }\n    // this.userAccounts.set(userAccount.id, new UserAccount(userAccount));\n    // let user = near.predecessorAccountId();\n\n    // if (this.userAccounts.get(user) !== false) {\n    //   this.userAccounts.set(user, donatedSoFar.toString());\n    //   near.log(`Thank you ${user} for donating`);\n    // }\n\n    return \"Successfully Created User account\";\n  }\n\n  @view\n  get_user({ userId }: { userId: string }) {\n    let user = this.userAccounts.get(userId);\n    // let tokenSet = restoreOwners(this.userAccounts.get(userId));\n    // if (tokenSet == null) {\n    //   return [];\n    // }\n\n    // return tokenSet;\n    return user;\n  }\n}\n// node --loader ts-node/esm ./contract.ts\n// near call dev-1664284823466-35028972601885 register_user '{\"userAccount\": {\"id\": \"6\", \"userEmail\": \"tea1234@gmail.com\"}}' --accountId=giftea.testnet\n// near view dev-1664284823466-35028972601885 get_user '{\"userId\": \"6\"}'\n// '\"payload\": {\"id\": \"0\", \"userEmail\": \"tea@gmail.com\"}'\n"],"names":["PromiseResult","PromiseError","u8ArrayToBytes","array","ret","e","String","fromCharCode","bytesToU8Array","bytes","Uint8Array","length","i","charCodeAt","assertNumber","n","Number","isSafeInteger","Error","chain","args","wrap","a","b","c","encode","Array","from","reverse","reduce","acc","undefined","decode","alphabet","digits","isArray","map","input","letter","index","indexOf","join","separator","to","split","padding","bits","chr","data","push","end","slice","normalize","fn","convertRadix","pos","res","forEach","d","carry","done","digit","digitBase","Math","floor","gcd","radix2carry","convertRadix2","mask","radix","num","radix2","revPadding","unsafeWrapper","apply","base16","base32","s","toUpperCase","replace","base64","base64url","genBase58","abc","base58","XMR_BLOCK_LEN","base58xmr","block","subarray","padStart","str","blockLen","j","concat","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","words","encodingConst","len","v","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","actualLength","TypeError","toLowerCase","lowered","sepIndex","lastIndexOf","sum","endsWith","decodeUnsafe","decodeToBytes","utf8","TextDecoder","TextEncoder","hex","CODERS","Object","keys","CurveType","U64_MAX","EVICTED_REGISTER","signerAccountId","env","signer_account_id","read_register","storageRead","key","storage_read","storageHasKey","storage_has_key","storageGetEvicted","storageWrite","value","exist","storage_write","storageRemove","storage_remove","call","target","descriptor","view","NearBindgen","requireInit","_create","_getState","rawState","near","_deserialize","_saveToStorage","obj","_serialize","_getArgs","JSON","parse","stringify","_reconstruct","classObject","plainObject","item","constructor","deserialize","_requireInit","ERR_INDEX_OUT_OF_BOUNDS","ERR_INCONSISTENT_STATE","indexToKey","Uint32Array","buffer","Vector","isEmpty","get","storageKey","swapRemove","pop","last","element","lastIndex","lastKey","extend","elements","Symbol","iterator","VectorIterator","clear","toArray","serialize","vector","current","next","serializeIndex","deserializeIndex","rawIndex","getIndexRaw","keyIndexPrefix","indexLookup","indexRaw","UnorderedMap","indexKey","indexValue","values","keysLen","valuesLen","_l","keysIsEmpty","valuesIsEmpty","set","nextIndex","nextIndexRaw","remove","lastLookupKey","UnorderedMapIterator","kvs","k","unorderedMap","UnorderedSet","elementIndexPrefix","elementsPrefix","contains","lastElement","lastLookupElement","BigInt","UserAccount","payload","id","userEmail","accountCreator","restoreOwners","collection","NewsletterContract","greeting","userAccounts","register_user","userAccount","user","get_user","userId"],"mappings":"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"}